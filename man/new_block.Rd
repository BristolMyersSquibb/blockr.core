% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/block-class.R, R/blocks-class.R,
%   R/board-class.R, R/data-block.R, R/file-block.R, R/parser-block.R,
%   R/plot-block.R, R/transform-block.R
\name{new_block}
\alias{new_block}
\alias{is_block}
\alias{as_block}
\alias{as_block.block}
\alias{as_block.list}
\alias{block_name}
\alias{block_ctor}
\alias{block_expr_server}
\alias{block_expr_ui}
\alias{block_dat_valid}
\alias{block_has_data_validator}
\alias{validate_data_inputs}
\alias{block_inputs}
\alias{block_inputs.block}
\alias{block_arity}
\alias{blocks}
\alias{is_blocks}
\alias{as_blocks}
\alias{as_blocks.blocks}
\alias{as_blocks.list}
\alias{as_blocks.block}
\alias{block_inputs.board}
\alias{new_data_block}
\alias{new_file_block}
\alias{new_parser_block}
\alias{new_plot_block}
\alias{new_transform_block}
\title{Blocks}
\usage{
new_block(
  server,
  ui,
  class,
  ctor,
  ctor_pkg,
  dat_valid = NULL,
  allow_empty_state = FALSE,
  name = NULL,
  ...
)

is_block(x)

as_block(x, ...)

\method{as_block}{block}(x, ...)

\method{as_block}{list}(x, ...)

block_name(x)

block_ctor(x)

block_expr_server(x)

block_expr_ui(x)

block_dat_valid(x)

block_has_data_validator(x)

validate_data_inputs(x, data)

block_inputs(x, ...)

\method{block_inputs}{block}(x, ...)

block_arity(x)

blocks(...)

is_blocks(x)

as_blocks(x, ...)

\method{as_blocks}{blocks}(x, ...)

\method{as_blocks}{list}(x, ...)

\method{as_blocks}{block}(x, ...)

\method{block_inputs}{board}(x, ...)

new_data_block(server, ui, class, ctor = sys.parent(), ...)

new_file_block(server, ui, class, ctor = sys.parent(), ...)

new_parser_block(server, ui, class, ctor = sys.parent(), ...)

new_plot_block(server, ui, class, ctor = sys.parent(), ...)

new_transform_block(server, ui, class, ctor = sys.parent(), ...)
}
\arguments{
\item{server}{A function returning \code{\link[shiny:moduleServer]{shiny::moduleServer()}}}

\item{ui}{A function with a single argument (\code{ns}) returning a \code{shiny.tag}}

\item{class}{Block subclass}

\item{ctor}{Constructor name (or function/frame number)}

\item{ctor_pkg}{Package name (or \code{NULL})}

\item{dat_valid}{(Optioanl) input data validator}

\item{allow_empty_state}{Either \code{TRUE}, \code{FALSE} or a character vector of
\code{state} values that may be empty while still moving forward with block eval}

\item{name}{Block name}

\item{...}{Further (metadata) attributes}

\item{x}{An object inheriting from \code{"block"}}

\item{data}{Data inputs}
}
\description{
Blocks consist of an expression that defines what the block produces (given
the result of the previous block combined with user input), plus a class
attribute
}
