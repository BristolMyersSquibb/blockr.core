% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-misc.R
\name{rand_names}
\alias{rand_names}
\alias{adjective_animal}
\alias{sample_letters}
\alias{to_sentence_case}
\alias{id_to_sentence_case}
\title{Random IDs}
\usage{
rand_names(
  old_names = character(0L),
  n = 1L,
  max_tries = 100L,
  id_fun = blockr_option("rand_id", NULL)
)

adjective_animal(n)

sample_letters(n)

to_sentence_case(x, replace = character(), with = character())

id_to_sentence_case(x)
}
\arguments{
\item{old_names}{Disallowed IDs}

\item{n}{Number of IDs to generate}

\item{max_tries}{Max number of attempts to create IDs that do not intersect
with \code{old_names}}

\item{id_fun}{A function with a single argument \code{n} that generates random
IDs. A value of \code{NULL} defaults to \code{\link[ids:adjective_animal]{ids::adjective_animal()}} if available and
\code{sample_letters} otherwise.}

\item{replace, with}{Mapped to \code{\link[base:grep]{base::gsub()}}}
}
\value{
A character vector of length \code{n} where each entry contains \code{length}
characters (all among \code{chars} and start/end with \code{prefix}/\code{suffix}), is
guaranteed to be unique and not present among values passed as \code{old_names}.
}
\description{
Randomly generated unique IDs are used throughout the package, created by
\code{rand_names()}. If random strings are required that may not clash with a set
of existing values, this can be guaranteed by passing them as \code{old_names}.
A \code{\link[=blockr_option]{blockr_option()}} \code{rand_id} can be set to swap out the function responsible
for ID generation.
}
\examples{
rand_names()
rand_names(n = 5L)
rand_names(id_fun = sample_letters)

}
